version: "3.5"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181"
    networks:
      - kafkanet
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Djava.security.auth.login.config=/tmp/zookeeper_server_jaas.conf -Dquorum.auth.enableSasl=true -Dquorum.cnxn.threads.size=20 -Dzookeeper.authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider -DjaasLoginRenew=3600000 -DrequireClientAuthScheme=sasl"

    volumes:
      - zookeeper_data_new:/var/lib/zookeeper/data
      - ./zookeeper_jaas.conf:/tmp/zookeeper_server_jaas.conf

    #command: ["sleep", "3600"]

  kafka-0:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-0
    expose:
      - 9092
      - 9093
      - 29092
    ports:
      - "29092:29092"
    networks:
      - kafkanet
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,SSL:SASL_SSL,EXTERNAL:SSL
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-0:9092,SSL://kafka-0:9093,EXTERNAL://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL

      # SSL configs
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets
      KAFKA_SSL_KEYSTORE_PASSWORD: supersecret
      KAFKA_SSL_KEY_PASSWORD: supersecret
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets
      KAFKA_SSL_TRUSTSTORE_PASSWORD: supersecret
      KAFKA_SSL_CLIENT_AUTH: required

      KAFKA_SSL_KEYSTORE_CREDENTIALS: keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: key_creds
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: truststore_creds

      # SASL configs
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN

      KAFKA_LISTENER_NAME_SSL_SASL_ENABLED_MECHANISMS: PLAIN


      # JAAS config file path
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"

    volumes:
      - kafka_0_data_new:/var/lib/kafka/data
      - ./keystore/kafka-0.server.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks:ro
      - ./keystore/kafka.client.keystore.jks:/etc/kafka/secrets/kafka.client.keystore.jks:ro
      - ./truststore/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro
      - ./secrets/key_creds:/etc/kafka/secrets/key_creds:ro
      - ./secrets/keystore_creds:/etc/kafka/secrets/keystore_creds:ro
      - ./secrets/truststore_creds:/etc/kafka/secrets/truststore_creds:ro
      - ./client.properties:/etc/kafka/secrets/client.properties:ro
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
    depends_on:
      - zookeeper

    #command: ["sleep", "3600"]
    
  kafka-1:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-1
    expose:
      - 9092
      - 9093
      - 29093
    ports:
      - "29093:29093"
    networks:
      - kafkanet
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      # Protocol mappings consistent with kafka-0
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,SSL:SASL_SSL,EXTERNAL:SSL

      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:9092,SSL://kafka-1:9093,EXTERNAL://localhost:29093

      KAFKA_INTER_BROKER_LISTENER_NAME: SSL

      # SSL configs same as kafka-0
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets
      KAFKA_SSL_KEYSTORE_PASSWORD: supersecret
      KAFKA_SSL_KEY_PASSWORD: supersecret
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets
      KAFKA_SSL_TRUSTSTORE_PASSWORD: supersecret
      KAFKA_SSL_CLIENT_AUTH: required

      KAFKA_SSL_KEYSTORE_CREDENTIALS: keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: key_creds
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: truststore_creds

      # SASL configs
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN

      KAFKA_LISTENER_NAME_SSL_SASL_ENABLED_MECHANISMS: PLAIN

      # JAAS config path
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"

    volumes:
      - kafka_1_data_new:/var/lib/kafka/data
      - ./keystore/kafka-1.server.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks:ro
      - ./keystore/kafka.client.keystore.jks:/etc/kafka/secrets/kafka.client.keystore.jks:ro
      - ./truststore/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro
      - ./secrets/key_creds:/etc/kafka/secrets/key_creds:ro
      - ./secrets/keystore_creds:/etc/kafka/secrets/keystore_creds:ro
      - ./secrets/truststore_creds:/etc/kafka/secrets/truststore_creds:ro
      - ./client.properties:/etc/kafka/secrets/client.properties:ro
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
    depends_on:
      - zookeeper

  kafka-2:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-2
    expose:
      - 9092
      - 9093
      - 29094
    ports:
      - "29094:29094"
    networks:
      - kafkanet
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      # Protocol mappings consistent with kafka-0
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,SSL:SASL_SSL,EXTERNAL:SSL

      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,SSL://0.0.0.0:9093,EXTERNAL://0.0.0.0:29094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:9092,SSL://kafka-2:9093,EXTERNAL://localhost:29094

      KAFKA_INTER_BROKER_LISTENER_NAME: SSL

      # SSL configs same as kafka-0
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets
      KAFKA_SSL_KEYSTORE_PASSWORD: supersecret
      KAFKA_SSL_KEY_PASSWORD: supersecret
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.truststore.jks
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets
      KAFKA_SSL_TRUSTSTORE_PASSWORD: supersecret
      KAFKA_SSL_CLIENT_AUTH: required

      KAFKA_SSL_KEYSTORE_CREDENTIALS: keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: key_creds
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: truststore_creds

      # SASL configs
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN

      KAFKA_LISTENER_NAME_SSL_SASL_ENABLED_MECHANISMS: PLAIN

      # JAAS config path
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"

    volumes:
      - kafka_2_data_new:/var/lib/kafka/data
      - ./keystore/kafka-2.server.keystore.jks:/etc/kafka/secrets/kafka.keystore.jks:ro
      - ./keystore/kafka.client.keystore.jks:/etc/kafka/secrets/kafka.client.keystore.jks:ro
      - ./truststore/kafka.truststore.jks:/etc/kafka/secrets/kafka.truststore.jks:ro
      - ./secrets/key_creds:/etc/kafka/secrets/key_creds:ro
      - ./secrets/keystore_creds:/etc/kafka/secrets/keystore_creds:ro
      - ./secrets/truststore_creds:/etc/kafka/secrets/truststore_creds:ro
      - ./client.properties:/etc/kafka/secrets/client.properties:ro
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
    depends_on:
      - zookeeper


  springboot:
    build:
      context: .
      dockerfile: Dockerfile
    image: whatsapp-kafka-app
    depends_on:
      - kafka-0
    ports:
      - "9003:9003"
    volumes:
      - D:/Ambarish/learning/springboot/wtapp/whatsapp-kafka/cert:/etc/kafka/secrets/
    networks:
      - kafkanet

  flask:
    build:
      context: ./flask_app
      dockerfile: Dockerfile
    container_name: flask
    ports:
      - "5000:5000"
    networks:
      - kafkanet

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: mssql
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - kafkanet


networks:
  kafkanet:
    name: kafka-network

volumes:
  zookeeper_data_new:
    driver: local
    name: zookeeper_data_new
  kafka_0_data_new:
    driver: local
    name: kafka_0_data_new
  kafka_1_data_new:
    driver: local
    name: kafka_1_data_new
  kafka_2_data_new:
    driver: local
    name: kafka_2_data_new